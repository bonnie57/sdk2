name: Sync Labels from Issue to PR

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  sync-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get associated issue number
        id: get-issue-number
        run: |
          ISSUE_NUMBERS=$(echo "${{ github.event.pull_request.body }}" | grep -oE "#[0-9]+" | tr -d "#" | tr '\n' ',')
          ISSUE_NUMBERS=$(echo $ISSUE_NUMBERS | sed 's/,$//')
          echo "ISSUE_NUMBERS=$ISSUE_NUMBERS" >> $GITHUB_ENV
          echo "Issue numbers are $ISSUE_NUMBERS"

      - name: Get labels from issue
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumbers = process.env.ISSUE_NUMBERS.split(","); 
            console.log(process.env); 
            try {
              let allLabels = new Set();
              for (const issueNumber of issueNumbers) {
                const {data:{labels}} = await github.rest.issues.get({
                  issue_number: issueNumber,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                });
                labels.forEach(label => allLabels.add(label.name));
                console.log(labels);
              }
              console.log("Labels: ", allLabels);
              core.setOutput('allLabels', Array.from(allLabels));
            } catch (error) {
             console.log(error);
            }
        env:
          ISSUE_NUMBERS: ${{ env.ISSUE_NUMBERS }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if labels are the same
        id: check_labels
        uses: actions/github-script@v7
        env:
          allLabels: ${{ steps.get_issue_labels.outputs.allLabels }}
        with:
          script: |
            const allLabels = core.getInput('allLabels');
            console.log(allLabels);
            const labels = allLabels.split(",");
            console.log(labels);
            const prLabels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            console.log(prLabels);
            const prLabelNames = prLabels.data.map(label => label.name);
            console.log(prLabelNames);
            const isSame = labels.every(label => prLabelNames.includes(label));
            console.log(isSame);
            core.setOutput('isSame', isSame);

      - name: Apply labels to PR
        if: steps.check_labels.outputs.isSame == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const labels = "${{ steps.get_issue_labels.outputs.allLabels }}".split(",");
            console.log(`Applying labels: ${labels}`);
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: labels,
            });
