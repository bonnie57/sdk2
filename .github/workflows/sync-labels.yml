name: Sync Labels from Issue to PR

on:
  pull_request:
    types: [edited, opened, synchronize]

jobs:
  sync-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Get associated issue number
        id: get_issue_number
        run: |
          ISSUE_NUMBERS=$(echo "${{ github.event.pull_request.body }}" | grep -oE "#[0-9]+" | tr -d "#" | tr '\n' ',')
          ISSUE_NUMBERS=$(echo $ISSUE_NUMBERS | sed 's/,$//')
          echo "ISSUE_NUMBERS=$ISSUE_NUMBERS" >> $GITHUB_ENV
          echo "Issue numbers are $ISSUE_NUMBERS"

      - name: Get labels from issue
        uses: actions/github-script@v7
        id: get_issue_labels
        with:
          script: |
            const issueNumbers = process.env.ISSUE_NUMBERS.split(",");
            let allLabels = new Set();
            for (const issueNumber of issueNumbers) {
              try {
                const { data: { labels } } = await github.rest.issues.get({
                  issue_number: issueNumber,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                });
                labels.forEach(label => allLabels.add(label.name));
                console.log(labels);
              } catch (error) {
                console.error(`Error fetching labels for issue #${issueNumber}: `, error);
              }
            }
            console.log("All Labels: ", allLabels);
            if (allLabels.size === 0) {
              console.log("No labels found");
              core.setOutput('labels_empty', 'true');
            } else {
              const sortedLabels = Array.from(allLabels).sort().join(",");
              console.log("Labels: ", sortedLabels);
              core.setOutput('labels_empty', 'false');
              core.setOutput('allLabels', allLabels);
            }

      - name: Check if labels are the same
        id: check_labels_are_same
        if: steps.get_issue_labels.outputs.labels_empty == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const allLabels = "${{ steps.get_issue_labels.outputs.sortedLabels }}";
            console.log("All Labels: ", allLabels);
            const label2= "${{ steps.get_issue_labels.outputs.allLabels }}";
            console.log("All Labels: ", label2);
            const prLabels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const prLabelNames = prLabels.data.map(label => label.name).sort().join(",");
            console.log("PR Labels: ", prLabelNames);
            console.log("All Labels: ", allLabels);
            const combinedLabels = Array.from(new Set([...allLabels.split(","), ...prLabelNames.split(",")])).sort().join(",");  
            const isSame = prLabelNames === allLabels;
            core.setOutput('isSame', isSame.toString());
            core.setOutput('labels', combinedLabels);

      - name: Apply labels to PR
        if: steps.check_labels_are_same.outputs.isSame == 'false'
        uses: actions/github-script@v7
        env:
          LABELS: ${{ steps.check_labels_are_same.outputs.labels }}
        with:
          script: |
            console.log("${{steps.check_labels_are_same.outputs.isSame}}");
            console.log("Applying labels: ${{ env.LABELS }}");
            console.log("Applying labels: ${{ steps.check_labels_are_same.outputs.labels }}");
            const labels = ${{ steps.check_labels_are_same.outputs.labels }}.split(",");
            console.log("Applying labels: ", labels);
            const label2 = core.getInput('labels', labels);
            console.log("Applying labels: ", label2);
            const issueLabels = ${{ steps.get_issue_labels.outputs.result }}.split(",");
            console.log(`Applying labels: ${labels}`);
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: labels,
            });
